docker exec -it homework-1_mysql_1 mysql -u root -p


INSERT INTO Classified (id, title, description, price, user_id, item_id)
VALUE (1, "Buy this Chair", "I fixed up this chair so that you could buy it. It is made out of wood or something. Maybe it's plastic. I don't know. Anyways buy this chair from me because I need money and you might need a chair. It's a good chair. I promise.
	Also if you would pay me a lot of money that would really help me out.

p.s. I looked and it is made of wood.", "$100.00", 1,1);

INSERT INTO Classified(id, title, price, user_id, item_id, description)
VALUE(2, "Hey This Time I Have a Great Deal", "$52.00", 1, 5,
"I'm suppose to write something about a dress here but instead I'm going to put some paragraphs from the Fancy Dress Party wiki page.
The Fancy Dress Party was a political party in England. It was formed in 1979 as a frivolous alternative to the mainstream electoral parties, and can be seen as a forerunner of the more prominent Official Monster Raving Loony Party.

Candidates stood in the 1979 general election, with John Beddoes being nominated in Dartford. Other Fancy Dress Party candidates stood in Dartford in each of the general elections in 1983, 1987, 1992, 1997 and 2001, and the party remained on the register of political parties until 2017.[1]

John 'Ernie' Crockford was the Fancy Dress Party's candidate for the 2010 general election.[2] Keynote manifestos include rapidly building new schools using revolutionary inflatable classrooms making it easier for delinquent pupils to let the entire school down, reducing class sizes to 3'x2'6 and the abolition of student top-up fees; students should be entitled to full pints the same as everyone else.[3]

Some more policies included:

Equip all Police Stations with state of the art lavatories so that, whatever the crime, the police will always have something to go on.
Increase prison sentences to at least 20 words.
Double police numbers; in future, PC49 will be known as PC98.
Add spelling to the national kricklum
Put an end to the dumbing-down of exams by replacing A-levels with jolly hard colouring tests.
Put an end to secondary school classes of over 40 by only accepting children of under 39 years of age.
Make cycling more attractive by banning the obese from wearing cycle shorts.
Reduce Britain's carbon footprint by introducing solar-powered sun beds.
Use a smaller font size to automatically reduce the unemployment statistics.");

INSERT INTO Classified(id, title, price, user_id, item_id, description)
VALUE (3, "An Amazing Piece of History Could Be Yours", "$8200.00", 2, 2,
"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Adipiscing diam donec adipiscing tristique risus nec feugiat in. At lectus urna duis convallis convallis tellus. Eu ultrices vitae auctor eu augue ut lectus. Suscipit adipiscing bibendum est ultricies integer quis. Semper viverra nam libero justo laoreet sit amet cursus. Risus commodo viverra maecenas accumsan lacus vel facilisis volutpat est. Consectetur libero id faucibus nisl tincidunt eget nullam non. Varius sit amet mattis vulputate enim nulla aliquet porttitor lacus. Eros in cursus turpis massa tincidunt dui ut ornare lectus. Lacus laoreet non curabitur gravida. Aenean vel elit scelerisque mauris. Magna eget est lorem ipsum. Euismod lacinia at quis risus sed vulputate.

Magnis dis parturient montes nascetur ridiculus mus mauris. In pellentesque massa placerat duis ultricies. Eu lobortis elementum nibh tellus molestie nunc non blandit massa. Elit sed vulputate mi sit amet mauris commodo quis imperdiet. Accumsan lacus vel facilisis volutpat est velit egestas. Massa vitae tortor condimentum lacinia quis. Felis eget velit aliquet sagittis id consectetur purus. Sit amet venenatis urna cursus eget nunc scelerisque. Pretium aenean pharetra magna ac placerat vestibulum. Risus pretium quam vulputate dignissim suspendisse in est ante in. Leo a diam sollicitudin tempor id eu nisl nunc mi. Ultrices in iaculis nunc sed augue lacus viverra vitae congue. Gravida dictum fusce ut placerat orci nulla pellentesque. Tincidunt vitae semper quis lectus nulla at volutpat diam. Id diam vel quam elementum. Vitae nunc sed velit dignissim sodales ut eu sem integer.

Aliquet nibh praesent tristique magna sit. Hendrerit gravida rutrum quisque non tellus orci ac auctor. Quam id leo in vitae turpis massa sed elementum tempus. Et molestie ac feugiat sed lectus vestibulum mattis ullamcorper. At ultrices mi tempus imperdiet nulla malesuada pellentesque elit. Egestas tellus rutrum tellus pellentesque eu tincidunt tortor aliquam. Ac auctor augue mauris augue neque gravida. Et egestas quis ipsum suspendisse ultrices gravida dictum fusce. Scelerisque purus semper eget duis at tellus at urna. Turpis egestas integer eget aliquet.");



SELECT ca.title, ca.price, i.name AS "Item", c.name AS "Category", u.username
FROM Classified ca
	INNER JOIN Item i ON ca.item_id = i.id
	INNER JOIN Category c ON i.category_id = c.id
	INNER JOIN User u ON ca.user_id = u.id;

SELECT ca.title, ca.price, ca.description, i.name AS "Item", c.name AS "Category"
FROM Classified ca
	INNER JOIN Item i ON ca.item_id = i.id
	INNER JOIN Category c ON i.category_id = c.id
WHERE c.name = :category;


SELECT MAX(id)+1 FROM Classified;


SELECT ca.title, ca.price, i.name AS "Item", c.name AS "Category", u.username, im.file_path
FROM Classified ca
	INNER JOIN Item i ON ca.item_id = i.id  
	INNER JOIN Category c ON i.category_id = c.id 
	INNER JOIN User u ON ca.user_id = u.id
	LEFT JOIN Item_Image im on im.item_id = i.id
ORDER BY ca.created_on DESC;

INSERT INTO Item_Image (file_path, item_id)
VALUE(:imagePath, itemId);

SELECT ca.title, ca.price, i.name, c.name, u.username, im.file_path 
				FROM Classified ca
					INNER JOIN Item i ON ca.item_id = i.id 
					INNER JOIN Category c ON i.category_id = c.id 
					INNER JOIN User u ON ca.user_id = u.id
					LEFT JOIN Item_Image im on im.item_id = i.id
				WHERE ca.title LIKE '%Bob%'
					OR ca.description LIKE '%Bob%'
					OR i.name LIKE '%Bob%'	
					OR u.username LIKE '%Bob%'
				ORDER BY ca.created_on DESC;


SELECT ca.title, ca.price, i.name, c.name, u.username
FROM Classified ca
	INNER JOIN Item i ON ca.item_id = i.id 
	INNER JOIN Category c ON i.category_id = c.id 
	INNER JOIN User u ON ca.user_id = u.id
	LEFT JOIN Item_Image im on im.item_id = i.id
WHERE ca.title LIKE '%Bob%'
	OR ca.description LIKE '%Bob%'
	OR i.name LIKE '%Bob%'	
	OR u.username LIKE '%Bob%'
ORDER BY ca.created_on DESC;




SELECT ca.title, ca.price, i.name, c.name, u.username
FROM Classified ca
	INNER JOIN Item i ON ca.item_id = i.id 
	INNER JOIN Category c ON i.category_id = c.id 
	INNER JOIN User u ON ca.user_id = u.id
	LEFT JOIN Item_Image im on im.item_id = i.id
WHERE (ca.title LIKE '%%'
	OR ca.description LIKE '%%'
	OR i.name LIKE '%%'	
	OR u.username LIKE '%%')
	AND
	(c.name = ""
	OR "" = "")
ORDER BY ca.created_on DESC
 limit 5 offset 0;

SELECT count(title)
FROM Classified ca
	INNER JOIN Item i ON ca.item_id = i.id 
	INNER JOIN Category c ON i.category_id = c.id 
	INNER JOIN User u ON ca.user_id = u.id
	LEFT JOIN Item_Image im on im.item_id = i.id
WHERE (ca.title LIKE '%%'
	OR ca.description LIKE '%%'
	OR i.name LIKE '%%'	
	OR u.username LIKE '%%')
	AND
	(c.name = "furniture"
	OR "furniture" = "");